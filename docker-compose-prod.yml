version: "3.9"

networks: 
  main:
    name: main

services:
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.2.0"
    container_name: "elasticsearch"
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.enabled: "true"
    ports:
        - 9200:9200  
    volumes:
        - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - main
    env_file:
      - ./var.env   

  kibana:
   container_name: kibana
   image: "docker.elastic.co/kibana/kibana:7.2.0"
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    elasticsearch.hosts: '["http://192.168.32.4:9200"]'
    ELASTICSEARCH_USERNAME: elastic
    ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
   networks:
    - main
   env_file:
      - ./var.env  
 
  api:
    container_name: "api"
    image: axrez/devops-backend
    restart: on-failure
    ports:
      - 8080:80
    env_file:
      - ./var.env  

  frontend:
    container_name: "frontend"
    image: axrez/devops-frontend
    ports:
      - 80:80

  grafana:
   image: grafana/grafana:latest
   ports:
     - 3000:3000  
   networks:
     - main
   volumes:
    - grafana-storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prome:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #command: --web.enable-lifecycle  --config.file=prometheus.yml  
    ports:
      - "9090:9090"
    networks:
      - main

volumes:
  grafana-storage:
  prome:
  elk_elasticsearch_data: