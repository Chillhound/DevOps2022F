# Mostly directly from cirlce ci's docs
# https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
version: 2.1
jobs:
  build-frontend:
    docker:
      - image: cimg/base:2022.02
    resource_class: small
    steps:
      - checkout
      - sonarcloud/scan
      - setup_remote_docker:
          version: 19.03.13
      - run: docker build -t axrez/devops-frontend -f frontend/Dockerfile frontend
      - run: |
          echo "$DOCKERHUB_PASS" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push axrez/devops-frontend
  build-backend:
    docker:
      - image: cimg/base:2022.02
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: docker build -t axrez/devops-backend -f Dockerfile.api .
      - run: docker scan --file Dockerfile.api --severity high axrez/devops-backend
      - run: |
          echo "$DOCKERHUB_PASS" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push axrez/devops-backend
  deploy-to-digital-ocean:
    docker:
      - image: cimg/base:2022.02
    resource_class: small
    steps:
      - checkout
      - run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant
          vagrant plugin install vagrant-digitalocean
      - run: sudo apt-get install -y rsync
      - add_ssh_keys:
          fingerprints:
            - "af:26:3f:56:e7:81:25:19:89:72:41:78:cd:4b:83:e8"
      - run: |
          echo "disregard ssh known_hosts warnings"
          echo "UserKnownHostsFile=/dev/null" > ~/.ssh/config
          echo "StrictHostKeyChecking=no">> ~/.ssh/config
      - run: ssh root@157.245.27.14 -i ~/.ssh/id_rsa_af263f56e781251989724178cd4b83e8 "curl https://raw.githubusercontent.com/Chillhound/DevOps2022F/main/docker-compose-prod.yml -o docker-compose-prod.yml && docker pull axrez/devops-backend && docker pull axrez/devops-frontend && docker-compose --env-file ./var.env -f docker-compose-prod.yml up -d"
  Compile-report:
    docker:
      - image: koppor/texlive 
    steps:
      - checkout
      - run: latexmk -pdf Report/main.tex


orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3
  latex-orb: woltsu/latex-orb@1.0.0


workflows:
  version: 2
  compile:
    jobs:
      - latex-orb/compile:
          file: Report/main.tex
  build:
    jobs:
      - build-frontend:
          filters:
            branches:
              only: main
          context: SonarCloud
      - build-backend:
          filters:
            branches:
              only: main
          context: SonarCloud
      - deploy-to-digital-ocean:
          requires:
            - build-frontend
            - build-backend
          filters:
             branches:
               only: main # only deploy on the main branch

